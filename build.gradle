buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}



apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'

group = 'group.greenbyte'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
//jar {
  //  from('frontend/lunchplanner/src') {
    //    into 'static'
    //}
//}

//processResources.dependsOn('frontend:bundle')


dependencies {
    runtime files('org.gradle.internal.jvm.Jvm.current().toolsJar)')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('it.ozimov:spring-boot-email-core')
    compile('io.jsonwebtoken:jjwt:0.7.0')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.session:spring-session-core:0.6.3')
    compile('org.springframework.boot:spring-boot-starter-data-jpa:2.0.0.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-quartz')
    compile "commons-io:commons-io:+"
    //compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    runtime('mysql:mysql-connector-java')
    testCompile('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    //changes in frontend without restarting server
    compile("org.springframework.boot:spring-boot-devtools")
    //google firebase cloud messaging
    implementation 'com.google.firebase:firebase-admin:6.1.0'
}


bootRun {
    //sourceResources sourceSets.main.resources
    classpath = sourceSets.main.allSource
}
